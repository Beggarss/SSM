<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.hrms">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- 1. 数据源 : DriverManagerDataSource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.DriverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.name}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--
        2. 配置和MyBatis的整合
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer -->
    <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.hrms.mapper" />
        <!--<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>-->
    </bean>
    <!--文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="5242440"></property>
    </bean>
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->
    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="defaultWebSecurityManager">
        <property name="realm">
            <bean class="realm.CustomRealm">
                <property name="credentialsMatcher" >
                    <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                        <property name="hashAlgorithmName" value="MD5"></property>
                        <property name="hashIterations" value="1"></property>
                    </bean>
                </property>
            </bean>
        </property>
        <property name="cacheManager"  >
                <bean class="org.apache.shiro.cache.ehcache.EhCacheManager">
                    <property name="cacheManagerConfigFile" value="classpath:shiro_ehcache.xml"></property>
                </bean>
        </property>
    </bean>
    <bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
        <property name="securityManager" ref="defaultWebSecurityManager"></property>
        <property name="loginUrl" value="/hrms/login.do"></property>
        <property name="successUrl" value="/success.jsp"></property>
        <property name="unauthorizedUrl" value="/hrms/unauthorized.do"></property>
        <property name="filterChainDefinitions">
            <value>
                /hrms/login.do  =anon
                /hrms/doLogin.do=anon
                /hrms/changePassWord=anon
                /administrator/download.do*=anon
                /administrator/* =roles[admin]
                /hrms/punch.do =roles[user]
                /hrms/punchIn.do=roles[user]
                /unauthorized.jsp=anon
                /** =authc
            </value>
        </property>
    </bean>
</beans>